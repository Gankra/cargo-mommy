name: Rust

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '11 7 * * 1,4'

env:
  RUSTFLAGS: -Dwarnings

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Run cargo check
      run: |
        cargo check --all --tests
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: |
          cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run cargo clippy
        run: |
          cargo clippy --tests --examples
  docs:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Run rustdoc
        run: |
          cargo doc --no-deps
  feature-check:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-hack
      - name: Run cargo hack powerset
        run: |
          cargo hack check --feature-powerset --no-dev-deps
  os-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        # note that bare "--no-default-features" isn't supported, you must pick a backend!
        feature-flags: ["--no-default-features", "", "--all-features"]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Run cargo test
        run: |
          cargo test ${{ matrix.feature-flags }}